{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","characters","count","tempArr","fetch","then","response","json","chars","results","map","char","push","this","setState","console","log","className","character","name","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAuCeA,G,wDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,WAAY,IAJF,E,kLASRC,EAAQ,EACRC,EAAU,G,YAEPD,EAAQ,I,gCACPE,MAAM,mDAAD,OAAoDF,IAC5DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIA,EAAMC,QAAQC,KAAI,SAAAC,GAAI,OAAIR,EAAQS,KAAKD,S,OACxDT,I,sBAEFW,KAAKC,SAAS,CAAEb,WAAYE,IAAW,eACvCY,QAAQC,IAAI,gBACZD,QAAQC,IAAIH,KAAKb,MAAMC,Y,sIAIvB,OACE,qBAAKgB,UAAU,MAAf,SACGJ,KAAKb,MAAMC,WAAWS,KAAI,SAAAQ,GAAS,OAClC,6BAAwBA,EAAUC,MAAzBD,EAAUE,a,GA5BXC,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5dde6066.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      characters: [],\n    };\n  }\n\n  async componentDidMount() {\n    let count = 1;\n    let tempArr = [];\n\n    while (count < 35) {\n      await fetch(`https://rickandmortyapi.com/api/character/?page=${count}`)\n        .then(response => response.json())\n        .then(chars => chars.results.map(char => tempArr.push(char)));\n      count++;\n    }\n    this.setState({ characters: tempArr }, () => {});\n    console.log(\"Characters: \");\n    console.log(this.state.characters);\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        {this.state.characters.map(character => (\n          <h1 key={character.id}>{character.name}</h1>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}