{"version":3,"sources":["components/character/character.component.jsx","components/character-list/character-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Character","props","className","src","character","image","alt","name","species","CharacterList","characters","map","id","App","state","count","tempArr","fetch","then","response","json","chars","results","char","push","this","setState","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAIaA,G,YAAY,SAAAC,GAAK,OAC5B,sBAAKC,UAAU,sBAAf,UACE,qBAAKC,IAAKF,EAAMG,UAAUC,MAAOC,IAAI,YAAYJ,UAAU,oBAC3D,6BAAKD,EAAMG,UAAUG,OACrB,4BAAIN,EAAMG,UAAUI,eCFXC,G,MAAgB,SAAAR,GAAK,OAChC,qBAAKC,UAAU,iBAAf,SAEID,EAAMS,WAAWC,KAAI,SAAAP,GAAS,OAC5B,cAAC,EAAD,CAA8BA,UAAWA,GAAzBA,EAAUQ,WC6BnBC,E,kDAjCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXJ,WAAY,IAJF,E,kLASRK,EAAQ,EACRC,EAAU,G,YAEPD,EAAQ,I,gCACPE,MAAM,mDAAD,OAAoDF,IAC5DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIA,EAAMC,QAAQX,KAAI,SAAAY,GAAI,OAAIP,EAAQQ,KAAKD,S,OACxDR,I,sBAEFU,KAAKC,SAAS,CAAEhB,WAAYM,IAAW,eACvCW,QAAQC,IAAI,gBACZD,QAAQC,IAAIH,KAAKX,MAAMJ,Y,sIAIvB,OACE,sBAAKR,UAAU,MAAf,UACE,+DACA,cAAC,EAAD,CAAeQ,WAAYe,KAAKX,MAAMJ,oB,GA5B5BmB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3886893.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './character.styles.css';\r\n\r\nexport const Character = props => (\r\n  <div className='character-container'>\r\n    <img src={props.character.image} alt='character' className='character-image'></img>\r\n    <h2>{props.character.name}</h2>\r\n    <p>{props.character.species}</p>\r\n  </div>\r\n);","import React from 'react';\r\n\r\nimport { Character } from '../character/character.component';\r\n\r\nimport './character-list.styles.css';\r\n\r\nexport const CharacterList = props => (\r\n  <div className='character-list'>\r\n    {\r\n      props.characters.map(character => (\r\n        <Character key={character.id} character={character} />\r\n      ))\r\n    }\r\n  </div>\r\n);","import React from 'react';\nimport './App.css';\nimport { Component } from 'react';\nimport { CharacterList } from './components/character-list/character-list.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      characters: [],\n    };\n  }\n\n  async componentDidMount() {\n    let count = 1;\n    let tempArr = [];\n\n    while (count < 35) {\n      await fetch(`https://rickandmortyapi.com/api/character/?page=${count}`)\n        .then(response => response.json())\n        .then(chars => chars.results.map(char => tempArr.push(char)));\n      count++;\n    }\n    this.setState({ characters: tempArr }, () => { });\n    console.log(\"Characters: \");\n    console.log(this.state.characters);\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <h1>Rick and Morty Character Book</h1>\n        <CharacterList characters={this.state.characters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}